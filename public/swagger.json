{
    "openapi": "3.0.1",
    "info": {
        "title": "Next Swagger API Aqua-Track",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api"
        },
        {
            "url": "https://aqua-track-olive.vercel.app/api"
        }
    ],
    "tags": [
        {
            "name": "User",
            "description": "Operations related to user management"
        },
        {
            "name": "Water",
            "description": "Operations related to water entries"
        },
        {
            "name": "Auth",
            "description": "Authentication operations"
        }
    ],
    "components": {
        "securitySchemes": {
            "csrfTokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "next-auth.csrf-token",
                "description": "After the first login, the session token is stored in cookies, and there is no need to retrieve the csrf token again during subsequent request actions. If you clear your cookies, you'll need to request the csrf token again. In this field, it is not necessary to enter a value for the header, because it still needs to be passed in the body of the authorization request through the selected type (google or credentials) to the csrfToken field. You can also log in to the site in the same browser as swagger-docs and not enter tokens manually. They will be automatically extracted from cookies."
            }
        },
        "schemas": {
            "Water": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier for the water entry (ObjectId)."
                    },
                    "userId": {
                        "type": "string",
                        "description": "The unique identifier for the user (ObjectId)."
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date when the water entry was recorded (YYYY-MM-DD format)."
                    },
                    "time": {
                        "type": "string",
                        "description": "The time when the water was consumed."
                    },
                    "volume": {
                        "type": "integer",
                        "description": "The volume of water consumed (in milliliters)."
                    }
                },
                "required": ["date", "time", "volume"],
                "description": "Represents a water consumption entry for a user."
            },
            "User": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Любов"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "drogaltseva92@gmail.com"
                            },
                            "image": {
                                "type": "string",
                                "example": "https://res.cloudinary.com/deer7odwf/image/upload/v1726217734/zyqfxdij07btxwuiqeyk.jpg"
                            },
                            "id": {
                                "type": "string",
                                "example": "66e15bdbd94b57c78830d8ab"
                            },
                            "gender": {
                                "type": "string",
                                "enum": ["woman", "man"],
                                "example": "man"
                            },
                            "activeTime": {
                                "type": "number",
                                "format": "float",
                                "example": 0
                            },
                            "weight": {
                                "type": "number",
                                "format": "float",
                                "example": 0
                            },
                            "volume": {
                                "type": "number",
                                "format": "float",
                                "example": 3
                            },
                            "publicId": {
                                "type": "string",
                                "example": "zyqfxdij07btxwuiqeyk"
                            }
                        }
                    },
                    "expires": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-13T10:46:06.373Z"
                    }
                }
            },
            "UserUpdate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "example": "Alice"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "alice@example.com"
                    },
                    "image": {
                        "type": "string",
                        "nullable": true,
                        "example": "https://example.com/image.jpg"
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["woman", "man"],
                        "example": "woman"
                    },
                    "activeTime": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "volume": {
                        "type": "number",
                        "format": "float",
                        "example": 1.8
                    }
                },
                "required": [],
                "nullable": true
            }
        },
        "responses": {
            "UserSession": {
                "description": "The session is successful",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                }
            },
            "RedirectSuccess": {
                "description": "The redirect is successful",
                "content": {
                    "text/html": {
                        "schema": {
                            "type": "string",
                            "example": "<html><body>page</body></html>"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/auth/csrf": {
            "get": {
                "tags": ["Auth"],
                "summary": "Get CSRF token",
                "description": "Returns a CSRF token to secure requests.",
                "responses": {
                    "200": {
                        "description": "CSRF token"
                    }
                }
            }
        },
        "/auth/signin/google": {
            "post": {
                "tags": ["Auth"],
                "summary": "Sign-in through the specified provider",
                "description": "Authenticates the user via the selected provider.",
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],

                "requestBody": {
                    "description": "Authentication data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "callbackUrl": {
                                        "type": "string",
                                        "description": "URL to redirect after authentication",
                                        "example": "http://localhost:3000/signin"
                                    },
                                    "json": {
                                        "type": "boolean",
                                        "description": "Whether to redirect or not",
                                        "example": true
                                    }
                                },
                                "required": ["csrfToken", "callbackUrl", "json"]
                            },
                            "examples": {
                                "googleExample": {
                                    "summary": "Example for Google provider",
                                    "value": {
                                        "csrfToken": "c4a0350112b456810d26fc20d9e8e0ffdd2d6b8b705dafdfd18c8903a2ac7b8e",
                                        "callbackUrl": "http://localhost:3000/signin",
                                        "json": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirects to Google",
                        "headers": {
                            "Location": {
                                "description": "The URL to which the user is redirected",
                                "schema": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://accounts.google.com/o/oauth2/v2/auth?client_id=YOUR_CLIENT_ID&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fapi%2Fauth%2Fcallback%2Fgoogle&response_type=code&scope=openid%20email%20profile"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials or provider not found"
                    }
                }
            }
        },
        "/auth/callback/credentials": {
            "post": {
                "tags": ["Auth"],
                "summary": "Sign-in through the specified provider",
                "description": "Authenticates the user via the selected provider.",
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Authentication data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "User email for credential-based login",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "User password for credential-based login",
                                        "example": "password123"
                                    },

                                    "callbackUrl": {
                                        "type": "string",
                                        "description": "URL to redirect after authentication",
                                        "example": "http://localhost:3000/signin"
                                    },
                                    "redirect": {
                                        "type": "boolean",
                                        "description": "Whether to redirect or not",
                                        "example": false
                                    },
                                    "json": {
                                        "type": "boolean",
                                        "description": "Whether to redirect as JSON",
                                        "example": true
                                    }
                                },
                                "required": [
                                    "provider",
                                    "email",
                                    "password",
                                    "csrfToken",
                                    "callbackUrl",
                                    "redirect"
                                ]
                            },
                            "examples": {
                                "credentialsExample": {
                                    "summary": "Example for Credentials provider",
                                    "value": {
                                        "email": "kurkayetra@gufum.com",
                                        "password": "Qwerty123",
                                        "csrfToken": "c4a0350112b456810d26fc20d9e8e0ffdd2d6b8b705dafdfd18c8903a2ac7b8e",
                                        "callbackUrl": "http://localhost:3000/signin",
                                        "redirect": false,
                                        "json": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RedirectSuccess"
                    },
                    "401": {
                        "description": "Invalid credentials or provider not found"
                    }
                }
            }
        },
        "/auth/signout": {
            "post": {
                "tags": ["Auth"],
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "summary": "User sign-out",
                "description": "Terminates the user's session.",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RedirectSuccess"
                    }
                }
            }
        },
        "/auth/session": {
            "get": {
                "tags": ["Auth"],
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "summary": "Get current session information",
                "description": "Returns information about the user's current session.",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UserSession"
                    },
                    "401": {
                        "description": "User not authenticated"
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "summary": "Register a new user",
                "description": "Creates a new user with an email and password",
                "tags": ["User"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "securePassword123"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User already exists"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": ["User"],
                "summary": "Get amount of users",
                "description": "Returns the amount of users in the database.",
                "responses": {
                    "200": {
                        "description": "Amount of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "users": {
                                            "type": "number",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/update": {
            "patch": {
                "summary": "Update info user",
                "tags": ["User"],
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "requestBody": {
                    "description": "User info to be updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/avatar/remove": {
            "patch": {
                "summary": "Request to delete an image",
                "tags": ["User"],
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Request to delete an image",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "publicId": {
                                        "type": "string",
                                        "example": "nztd1vmrqxgsvfarwyha"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Deleting an image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Image removed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/water/create": {
            "post": {
                "tags": ["Water"],
                "summary": "Create a new water entry",
                "description": "Creates a new water entry in the database.",
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Water entry data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "example": "2024-09-28"
                                    },
                                    "time": {
                                        "type": "string",
                                        "example": "10:00"
                                    },
                                    "volume": {
                                        "type": "number",
                                        "example": 200
                                    }
                                }
                            }
                        },
                        "required": true
                    }
                },
                "responses": {
                    "201": {
                        "description": "Water entry created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Water"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/water/{waterId}": {
            "put": {
                "tags": ["Water"],
                "summary": "Update info water",
                "description": "Updates a water entry in the database.",
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "waterId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the water entry to retrieve.",
                        "schema": {
                            "type": "string",
                            "example": "66f41b6b1714ac448eb07757"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Water entry data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "example": "2024-09-28"
                                    },
                                    "time": {
                                        "type": "string",
                                        "example": "10:00"
                                    },
                                    "volume": {
                                        "type": "number",
                                        "example": 200
                                    }
                                }
                            }
                        },
                        "required": true
                    }
                },
                "responses": {
                    "200": {
                        "description": "Water entry updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Water"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": ["Water"],
                "summary": "Delete water entry",
                "description": "Delete a water entry in the database.",
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "waterId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the water entry to retrieve.",
                        "schema": {
                            "type": "string",
                            "example": "66f41b6b1714ac448eb07757"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Water entry deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Water"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/water/daily/{date}": {
            "get": {
                "tags": ["Water"],
                "summary": "Get daily water entry",
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "description": "Retrieves the water entry for a specific date using query parameter.",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "required": true,
                        "description": "Date for which to retrieve the water entry, formatted as YYYY-MM-DD.",
                        "schema": {
                            "type": "string",
                            "example": "2024-09-25"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Daily water entry retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Water"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/water/monthly/{date}": {
            "get": {
                "tags": ["Water"],
                "summary": "Get monthly water entry",
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "description": "Retrieves the water entry for a specific date using query parameter.",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "required": true,
                        "description": "Date for which to retrieve the water entry, formatted as YYYY-MM-DD.",
                        "schema": {
                            "type": "string",
                            "example": "2024-09-25"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Monthly water entry retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Water"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/water/weekly{date}": {
            "get": {
                "tags": ["Water"],
                "summary": "Get weekly water entry",
                "security": [
                    {
                        "csrfTokenAuth": []
                    }
                ],
                "description": "Retrieves the water entry for a specific date using query parameter.",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "required": true,
                        "description": "Date for which to retrieve the water entry, formatted as YYYY-MM-DD.",
                        "schema": {
                            "type": "string",
                            "example": "2024-09-25"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Weekly water entry retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Water"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    }
}
