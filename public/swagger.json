{
    "openapi": "3.0.1",
    "info": {
        "title": "Next Swagger API Aqua-Track",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api"
        },
        {
            "url": "https://aqua-track-olive.vercel.app/api"
        }
    ],
    "tags": ["Users", "Water"],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "WaterEntry": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "ID of the user"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date of the water entry"
                    },
                    "volume": {
                        "type": "number",
                        "description": "Volume of water consumed"
                    },
                    "_id": {
                        "type": "string",
                        "description": "Id of water entry",
                        "example": "66d6c013157ef1c67f7f096e"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of when the entry was created"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the last update"
                    }
                },
                "required": ["user", "date", "volume"]
            },
            "UserDetails": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["woman", "man"]
                    },
                    "weight": {
                        "type": "number",
                        "format": "float"
                    },
                    "activeTime": {
                        "type": "number"
                    },
                    "waterIntake": {
                        "type": "number",
                        "format": "float"
                    },
                    "avatar": {
                        "type": "string",
                        "format": "uri"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "email",
                    "password",
                    "token",
                    "gender",
                    "weight",
                    "activeTime",
                    "waterIntake",
                    "avatar",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "UserResponseWithMessage": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "token": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "UserResponseWithoutMessage": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "UserUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["woman", "man"],
                        "example": "man",
                        "default": "woman"
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "example": 70.5
                    },
                    "activeTime": {
                        "type": "number",
                        "example": "2"
                    },
                    "waterIntake": {
                        "type": "number",
                        "format": "float",
                        "example": 2000
                    },
                    "avatar": {
                        "type": "string",
                        "format": "binary",
                        "description": "New avatar image (JPEG or PNG)"
                    }
                }
            },
            "UserUpdateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "User updated successfully"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "gender": {
                                "type": "string",
                                "enum": ["woman", "man"],
                                "example": "man"
                            },
                            "weight": {
                                "type": "number",
                                "format": "float"
                            },
                            "activeTime": {
                                "type": "number"
                            },
                            "waterIntake": {
                                "type": "number",
                                "format": "float"
                            },
                            "avatar": {
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            }
        },
        "responses": {
            "UserListResponse": {
                "description": "List of users",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/UserDetails"
                            }
                        }
                    }
                }
            },
            "UserLoginSuccess": {
                "description": "User logged in successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UserResponseWithoutMessage"
                        }
                    }
                }
            },
            "UserRegisterSuccess": {
                "description": "User registered successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UserResponseWithMessage"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized"
                                }
                            }
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Internal server error"
                                }
                            }
                        }
                    }
                }
            },
            "UserUpdateSuccess": {
                "description": "User updated successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UserUpdateResponse"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/users/login": {
            "post": {
                "summary": "Login a user",
                "tags": ["Users"],
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UserLoginSuccess"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "description": "Email or password is wrong"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "summary": "Register a new user",
                "tags": ["Users"],
                "requestBody": {
                    "description": "User registration information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "required": ["name", "email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/UserRegisterSuccess"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "409": {
                        "description": "User already exists"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "summary": "Get current user",
                "tags": ["Users"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting information successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdateRequest"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/users/update": {
            "patch": {
                "summary": "Update user information",
                "tags": ["Users"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "User information and avatar to update",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UserUpdateSuccess"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "summary": "Logout user",
                "tags": ["Users"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "User information about logout"
                },
                "responses": {
                    "204": {
                        "description": "User logout successfully"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Get list of users",
                "tags": ["Users"],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UserListResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/water/create": {
            "post": {
                "summary": "Adding data on the volume of water consumed",
                "tags": ["Water"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Water creating information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The date of the water entry in ISO 8601 format"
                                    },
                                    "volume": {
                                        "type": "number",
                                        "description": "The volume of water consumed in milliliters"
                                    }
                                },
                                "required": ["date", "volume"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Getting information successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaterEntry"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "400": {
                        "description": "Bad Request: Missing required fields"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    }
}
